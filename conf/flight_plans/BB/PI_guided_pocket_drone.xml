<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">

<flight_plan alt="1.0" ground_alt="0" lat0="51.990634" lon0="4.376789" max_dist_from_home="8" name="PI_guided_leader" security_height="0.3">
  <header>
#include "autopilot_guided.h"
#include "subsystems/datalink/datalink.h"
#include "subsystems/ahrs.h"

// Useful Combination of the flags fir the autopilot_guided_update
#define GUIDED_FLAG_XY_VEL_BODY GUIDED_FLAG_XY_BODY|GUIDED_FLAG_XY_VEL
#define GUIDED_FLAG_XY_VEL_BODY_YAW_RATE GUIDED_FLAG_XY_BODY|GUIDED_FLAG_XY_VEL|GUIDED_FLAG_YAW_RATE
#define GUIDED_FLAG_XY_OFFSET_Z_VEL GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_Z_VEL
#define GUIDED_FLAG_XY_OFFSET_YAW_OFFSET GUIDED_FLAG_XY_OFFSET|GUIDED_FLAG_YAW_OFFSET

#ifdef NAV_C
static float obstacle_dist, obstacle_azimuth, obstacle_bearing;
static inline void obstacle_detection_cb(uint8_t sender_id __attribute__((unused)), float _obstacle_dist, float _obstacle_azimuth, float _obstacle_bearing)
{
  if (And(CloseRadAngles(_obstacle_azimuth,0), CloseRadAngles(_obstacle_bearing,0))) {
    obstacle_dist = _obstacle_dist;
    obstacle_azimuth = _obstacle_azimuth;
    obstacle_bearing = _obstacle_bearing;
  }
}
#endif
  </header>
  <waypoints>
    <waypoint name="HOME"      x="0.0"         y = "0.0"  />
    <waypoint name="STDBY"     x="0.0"         y = "0.0"  />
    <waypoint name="p0"        x="1.0"        y = "1.0" />
    <waypoint name="p1"        x="-1.0"        y = "1.0"  />
    <waypoint name="p2"        x="-1.0"	       y = "-1.0"  />
    <waypoint name="p3"        x="1.0"         y = "-1.0" />
    <waypoint name="centre"    x="0.0"         y = "0.0"  />
    <waypoint lat="51.9905836" lon="4.3767729" name="_CZ1"/>
    <waypoint lat="51.9906365" lon="4.3767138" name="_CZ2"/>
    <waypoint lat="51.990680"  lon="4.376805"  name="_CZ3"/>
    <waypoint lat="51.9906226" lon="4.3768699" name="_CZ4"/>
  </waypoints>
  <sectors>
    <sector color="red" name="CyberZoo">
      <corner name="_CZ1"/>
      <corner name="_CZ2"/>
      <corner name="_CZ3"/>
      <corner name="_CZ4"/>
    </sector>
  </sectors>
  <variables>
	  <variable var="desired_heading" init="0.0f" type="float" min="0." max="10." step="0.1"/>
	  <variable var="turn_angle" init="90.0f" type="float" min="-180" max="180" step="1"/>
	  <variable var="turn_rate" init=".5f" type="float" min="0." max="10." step="0.1"/>
   	  <variable var="climb_descent_vel" init="0.3f" type="float" min="0." max="1" step="0.1"/>
    	  <variable var="forward_vel" init="0.3f" type="float" min="0." max="2" step="0.1"/>
	  <variable var="nominal_alt" init="1.0f" type="float" min="0." max="10." step="0.1"/>
	  <variable var="task" init="0" type="int" min="0" max="2" step="1"/>
	  <abi_binding name="PATH_INTEGRAL" vars="id,opt_vel_x, opt_vel_y"/>
   </variables>

  <exceptions>
    <!-- Out of bounds -->
    <exception cond="!InsideCyberZoo(GetPosX(), GetPosY())" deroute="Land"/>
    <!-- High altitude -->
    <exception cond="(GetPosAlt() > 4.5)" deroute="Land"/>
  </exceptions>

  <blocks>
    <block name="FPInit">
      <while cond="!GpsFixValid()"/>
	<set var = "opt_vel_x" value="0."/>
	<set var = "opt_vel_y" value="0."/>
	<call_once fun="ins_reset_altitude_ref()"/>
      <while cond="1"/>
    </block>

    <block name="Start Engine">
      <call_once fun="autopilot_set_motors_on(TRUE)"/>
      <while cond="1"/>
    </block>

    <block name="Take off">
      <set var="desired_heading" value="stateGetNedToBodyEulers_f()->psi"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_Z_VEL,0.,0.,-climb_descent_vel,desired_heading)"/>
      <while cond="LessThan(stateGetPositionEnu_f()->z,nominal_alt-0.2)"></while>
	<call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET,0.,0.,-nominal_alt,desired_heading)"/>
      <while cond="LessThan(stage_time,1)"/>
      <deroute block="Follow_wps"/>
    </block>

<!-- Follow WPs (Leader)-->
    <block name="Follow_wps">
      <while cond="LessThan(block_time,120)">
	<call_once fun="guidance_h_set_guided_vel(opt_vel_x,opt_vel_y)"/>
      </while>
     <deroute block="Hover"/>
    </block>


<!-- Follow Leader-->
    <block name="Follow_leader">
      <while cond="LessThan(block_time,120)">
	<call_once fun="guidance_h_set_guided_vel(opt_vel_x,opt_vel_y)"/>
      </while>
     <deroute block="Hover"/>
    </block>


    <block name="Hover">
      <set var="desired_heading" value="stateGetNedToBodyEulers_f()->psi"/>
      <while cond="LessThan(block_time,2)">
         <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET,0.,0.,-nominal_alt,desired_heading)"/>
      </while>
      <deroute block="Land"/>
    </block>

    <block name="Land">
      <set var="desired_heading" value="stateGetNedToBodyEulers_f()->psi"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_Z_VEL,0.,0.,climb_descent_vel,desired_heading)"/>
      <while cond="MoreThan(stateGetPositionEnu_f()->z,0.1)"/>
      <call_once fun="autopilot_guided_update(GUIDED_FLAG_XY_OFFSET_YAW_OFFSET,0.,0.,0.,0.)"/>
      <while cond="LessThan(block_time,5)"/>
      <deroute block="Kill Engines"/>
    </block>

    <block name="Kill Engines">
      <call_once fun="autopilot_set_motors_on(FALSE)"/>
      <while cond="1"/>
    </block>
  </blocks>
</flight_plan>
